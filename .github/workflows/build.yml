name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  job:
    name: ${{ matrix.os }}-build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, ] # windows-latest, macos-latest ]
        include:
          - os: windows-latest
            triplet: x64-windows
          - os: ubuntu-latest
            triplet: x64-linux
          - os: macos-13 # Use newer version for macos, https://github.com/actions/runner-images?tab=readme-ov-file#available-images
            triplet: x64-osx
    env:
      # CMAKE_GENERATOR: Ninja
      EMPTY_ENV: "EMPTY"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Fix VCPKG_ROOT
        if: ${{ (runner.os == 'Linux' || runner.os == 'macos') }}
        run: |
          echo "VCPKG_ROOT=$VCPKG_INSTALLATION_ROOT" >> $GITHUB_ENV
      - name: Fix VCPKG_ROOT(windows)
        if: ${{ runner.os == 'Windows' }}
        run: |
          echo "VCPKG_ROOT=$ENV:VCPKG_INSTALLATION_ROOT" >> $ENV:GITHUB_ENV


      - name: Restore vcpkg and its artifacts.
        uses: actions/github-script@v7
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Running cmake
        run: |
          cd ${{ github.workspace }}
          cmake -B build -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake -DCMAKE_BUILD_TYPE=Release -Dcy_EXPERIMENT=OFF


      - name: Build Solution
        run: |
          cd build
          cmake --build . --parallel --config Release

      - name: Test
        run: |
          cd build
          ctest -C Release || ctest -C Release --rerun-failed --output-on-failure

      - name: Package
        run: |
          cd build
          cpack .